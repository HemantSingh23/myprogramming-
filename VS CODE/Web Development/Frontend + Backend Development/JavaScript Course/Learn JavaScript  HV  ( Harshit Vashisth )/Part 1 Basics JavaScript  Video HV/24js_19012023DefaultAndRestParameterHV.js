

console.log("24JS") ;


//  // Default Parameter ==>


function addTwo(a,b)
{
    return a+b;
}
 
const ans = addTwo(4,5) ;
console.log(ans) ; // print 9
 
const ans1 = addTwo(4) ;
console.log(ans1) ; // print NaN

//  // here if b will be nothing then it is undefined and 
//  // it print NaN so to stop this we add a condtion
//


//  //  //  Old Way ==>

function addTwo1(a,b)
{
    if(typeof b === "undefined") b = 1;
    return a+b;
}
 
const ans2 = addTwo1(4,5) ;
console.log(ans2) ; // print 9
 
const ans3 = addTwo1(4) ;
console.log(ans3) ; // print 5 because b is nothing so
//  // b is undefined so b will be 1


//  //  //  New Way ==>

function addTwo2(a,b=1)
{
    return a+b;
}
 
const ans4 = addTwo2(6,8) ;
console.log(ans4) ; // print 14
 
const ans5 = addTwo2(6) ;
console.log(ans5) ; // print 7






/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





//  //  // Rest Parameter ==>


console.log("Rest Parameter") ;



function myFunc (a,b,c)
{
    console.log(`a is ${a}`) ;
    console.log(`b is ${b}`) ;
    console.log(`c is ${c}`) ;
}
myFunc(3,4,5) ;




//  // if we have many value and we want that a is 3 and b is 4
// and rest of all other value is in c as array then

function myFunc1 (a, b, ...c)
{
    console.log(`a is ${a}`) ;
    console.log(`b is ${b}`) ;
    console.log(`c is ${c}`) ;
}
myFunc1(3,4,5,6,7,8,9) ;



//  // Now we want a functin such that we want the sum of
//  // all the argument pass to function

function addAll(...numbers)
{
    // console.log(numbers);
    console.log(typeof numbers);
    console.log(Array.isArray(numbers)); // print true 
    //  // because numbers is array

    let sum =0;
    for(let number of numbers)
    {
        sum += number ;
    }
    return sum;

}
const sum = addAll(1,2,3,4,5,6,7,8,9);
console.log(sum) ;





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



//  //  Parameter Destructuring ==>

// it is used with object 
// it is used in React very much

console.log("Parameter Destructuring") ;



const person = {
    firstName : "Hemant",
    gender : "male"
}

// function printDetails(obj)
// {
//     console.log(obj.firstName);
//     console.log(obj.gender);
//     console.log(obj.age); // print undefined because age is not in the object
// }
// printDetails(person) ;


//  // Destructuring the object 
function printDetails({firstName, gender,age})
{
    console.log(firstName);
    console.log(gender);
    console.log(age); // print undefined because age is not in the object
}
printDetails(person) ;






/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




//  //  // Callback Function ==>

console.log("Callback Function") ;




function Func(a)
{
    console.log(a) ;
    // console.log('hello, world') ;
}
Func("Hemant");  // pass string then a will be string
Func([1,2,3]);  // pass array then a will be array
Func({name : "Pushpendra"});   // pass object then a will be object



function Func1()
{
    console.log("inside func 2") ;
}

function Func2(a)
{
    // console.log(a); 
    a();
    // here a is called callback
}
Func2(Func1) ;





function Func3(name)
{
    console.log("inside func 3") ;
    console.log( `Your Name is ${name} ` ) ;
}

function Func4(callback)
{
    console.log("Hello i am func 4 and now i am calling func 3") ;

    callback("Hemant Singh ");
    callback(); // when this wil call then undefined will be print
    //  // because here we pass nothing
}
Func4(Func3) ;
























